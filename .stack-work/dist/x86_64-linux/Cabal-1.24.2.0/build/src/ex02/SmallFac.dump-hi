
==================== FINAL INTERFACE ====================
2017-12-06 15:30:28.597129 UTC

interface funcprog-ws17-18r-0.1.0.0-EbHhfSs1oJTIKgnYUQNi6x:SmallFac 8002
  interface hash: 13bdb0b86671a8d410bff6806974823b
  ABI hash: d6bb13df6c0bbabeb4d4e35f08c99a51
  export-list hash: 5911e57c2713d75e21eca3bc1a0cd3e2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9818348ff1ae0de586a67810f347de33
  sig of: Nothing
  used TH splices: False
  where
exports:
  SmallFac.first'
  SmallFac.sfac
  SmallFac.sfac'
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      primes-0.2.1.0@primes-0.2.1.0-BN5qcmPxb1H2keY7Pz9jFX
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  primes-0.2.1.0@primes-0.2.1.0-BN5qcmPxb1H2keY7Pz9jFX:Data.Numbers.Primes 0fa8744becaca49c6475846765751f31
10aac59653f7da2abc95ccc41eee8d0e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SmallFac.$trModule2
                   SmallFac.$trModule1) -}
26e5ad606cc5c2cba8379a25539092af
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SmallFac"#) -}
1e5312ba5c6afb156b656ee43443a72c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "funcprog-ws17-18r-0.1.0.0-EbHhfSs1oJTIKgnYUQNi6x"#) -}
2ed0c845cbcf96abfcd8e47c81bb31e0
  first' :: (a -> GHC.Types.Bool) -> [a] -> a
  {- Arity: 2, Strictness: <C(S),C(U)><S,1*U> -}
e813002b551c6654aa8f033832cabe39
  sfac :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Integer.Type.Integer) ->
                 case Data.Numbers.Primes.isPrime_factors
                        n
                        Data.Numbers.Primes.isPrime1 of wild {
                   [] -> GHC.List.badHead @ GHC.Integer.Type.Integer
                   : x ds1 -> x }) -}
98856f59de6d3b487bbf738af106f4cc
  sfac' :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (n :: GHC.Integer.Type.Integer) ->
                 SmallFac.first'
                   @ GHC.Integer.Type.Integer
                   (\ (x :: GHC.Integer.Type.Integer) ->
                    case GHC.Integer.Type.eqInteger#
                           x
                           SmallFac.sfac'1 of wild { DEFAULT ->
                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                      GHC.Types.False
                      -> case GHC.Integer.Type.eqInteger#
                                (GHC.Integer.Type.modInteger n x)
                                SmallFac.sfac'1 of wild2 { DEFAULT ->
                         GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 }
                      GHC.Types.True
                      -> case GHC.Real.divZeroError ret_ty GHC.Types.Bool of {} } })
                   Data.Numbers.Primes.isPrime1) -}
1d7ab89511203add41e6c3c638a2df7e
  sfac'1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

